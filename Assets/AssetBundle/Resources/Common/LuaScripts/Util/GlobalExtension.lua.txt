---@param data System.Collections.IEnumerable | table
---@return (fun(t:System.Collections.IEnumerable, index:number):number, any), System.Collections.IEnumerable, number
function cspairs(data)
	if type(data) == "table" then
		return pairs(data);
	end
	local enumerator = data:GetEnumerator();
	-----@param t System.Collections.IEnumerable
	-----@param index number
	-----@return any, any
	local function next(t, index)
		if enumerator:MoveNext() then
			local current = enumerator.Current;
			if type(current) == "userdata" and current.Key then
				return current.Key, current.Value;
			else
				return index + 1, current;
			end
		end
	end
	return next, data, -1;
end

---@param data System.Collections.IEnumerable | table
---@return (fun(t:System.Collections.IEnumerable, index:number):number, any), System.Collections.IEnumerable, number
function csipairs(data)
	if type(data) == "table" then
		return ipairs(data);
	end
	local enumerator = data:GetEnumerator();
	-----@param t System.Collections.IEnumerable
	-----@param index number
	-----@return number, any
	local function next(t, index)
		if enumerator:MoveNext() then
			return index + 1, enumerator.Current;
		end
	end
	return next, data, -1;
end

---@type table
WeakTable = setmetatable({}, {__mode = "kv"});

Log = CS.Main.Debugger.Log;
LogFormat = CS.Main.Debugger.LogFormat;
LogWarning = CS.Main.Debugger.LogWarning;
LogWarningFormat = CS.Main.Debugger.LogWarningFormat;
LogError = CS.Main.Debugger.LogError;
LogErrorFormat = CS.Main.Debugger.LogErrorFormat;

Assert = CS.Main.PointerCheck;